# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I opened my spotifydata so i could see my thre table i created 

SELECT *
FROM DB1.spotifydata;

#Next I determined the popularity, artist name and track name where popularity is grater than 80

SELECT popularity, artist_name, track_name
FROM DB1.spotifydata
WHERE popularity >80;

#Then I determined the danceability, artist name and track name ordered by danceability in decending order limited by 4

SELECT DANCEABILITY, artist_name, track_name
FROM DB1.spotifydata
ORDER BY danceability desc
LIMIT 4;

#Last I determined artist name and track name where artist name equals Bad Bunny 

SELECT artist_name, track_name
FROM db1.spotifydata
WHERE artist_name ='Bad Bunny';
